print('Задание 1.')


class Data:
    def __init__(self, data):
        self.data = data

    @classmethod
    def Method(cls, data):
        """
        Метод переводит данные в формат списка, разделяя по дефису, и преобразует в числовой формат. При вводе
        пользователем нечисловых данных преобразовать их в числовые не удается, этот тип ошибки отлавливает приведенное
        исключение.
        :param data: Дата, введенная пользователем в формате дд:мм:гггг
        :return: Функция возвращает данные в формате списка
        """
        try:
            date = []
            for i in data.split('-'):
                date.append(int(i))
            return f'Ваша дата {date[0]}.{date[1]}.{date[2]}'
        except ValueError:
            print('Дата введена некорректно!')

    @staticmethod
    def Validation(data):
        """
        Декоратор @staticmethod не позволяет функции получить готовые данные из предыдущей функции, поэтому пришлось
        полностью переписать сюда всю предыдущую функцию. Знаю, что так делать не стоит, но сделать иначе можно только
        без декоратора. Функция проверяет дату на предмет чисел и месяцев, и выводит соответствующее сообщение, если
        число месяца или номер месяца больше допустимого.
        :param data: Введенная пользователем дата.
        :return: Функция возвращает введенную дату в формате списка или сообщение об ошибке и некорректно введенных
        данных.
        """
        try:
            date = []
            month_31_day = [1, 3, 5, 7, 8, 10, 12]
            month_30_day = [4, 6, 9, 11]
            for i in data.split('-'):
                date.append(int(i))
            if date[0] > 31 and date[1] in month_31_day:
                return 'В этом месяце меньше дней!'
            elif date[0] > 30 and date[1] in month_30_day:
                return 'В этом месяце меньше дней!'
            elif date[2] % 4 == 0 and date[1] == 2 and date[0] > 29:
                return 'Високосный год! В феврале меньше чисел!'
            elif date[1] == 2 and date[0] > 28:
                return 'Год не високосный, в феврале меньше чисел было!'
            elif date[1] > 12:
                return 'В году меньше месяцев!'
            else:
                print(f'Ваша дата {date[0]:02d}.{date[1]:02d}.{date[2]}')
        except ValueError:
            print('Дата введена некорректно!')


print(Data.Method(input('Введите дату в формате чч-мм-гггг: ')))
print(Data.Validation(input('Введите дату в формате чч-мм-гггг: ')))


